import React, {useState, useEffect} from "react";
import {Link, Redirect} from 'react-router-dom';
import useFetch from '../../hooks/useFetch';
import useLocalStorage from '../../hooks/useLocalStorage';

const Authentication = props => {
    const isLogin = props.match.path === '/login';
    const pageTitle = isLogin ? 'Sigh In' : 'Sign Out';
    const descriptionLink = isLogin ? '/register' : '/login';
    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?';
    const apiUrl = isLogin ? '/users/login' : '/users';
    const [email, setEmail] = useState();
    const [password, setPassword] = useState();
    const [username, setUsername] = useState('');
    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false);
    const [{response, isLoading}, doFetch] = useFetch(apiUrl);
    const [token, setToken] = useLocalStorage('token')

    //const emailRef = useRef(null);
    console.log('token', token);

    //console.log('fff', isLogin);

    const handleSubmit = (event) => {
        event.preventDefault();
        console.log('data', email, password);
        const user = isLogin ? {email, password} : {email, password, username}
        //setIsSubmitting(true);
        doFetch({
            method: 'post',
            data: {
                user
            }
        })
        //console.log('ref', emailRef.current.value);
    }

    useEffect(() => {
        if(!response){
            return
        }
        setToken(response.user.token);
        setIsSuccessfullSubmit(true);
        //console.log('response', response)
    }, [response, setToken])
    if (isSuccessfullSubmit) {
        return <Redirect to="/"/>
    }
    return (
        <div className='auth-page'>
            <div className='container page'>
                <div className='row'>
                    <div className='col-md-6 offset-md-3 col-xs-12'>
                        <h1 className='text-xs-center'>{pageTitle}</h1>
                        <p className='text-xs-center'>
                            <Link to={descriptionLink}>{descriptionText}</Link>
                        </p>
                        <form onSubmit={handleSubmit}>
                            <fieldset>
                                {!isLogin && (
                                    <fieldset className='form-group'>
                                        <input
                                               type="text"
                                               className='form-control form-control-lg'
                                               placeholder="Username"
                                                //ref={emailRef}
                                               value={username}
                                               onChange={e =>setUsername(e.target.value)}
                                        />
                                    </fieldset>
                                )}
                                <fieldset className='form-group'>
                                    <input type="email"
                                           className='form-control form-control-lg'
                                           placeholder="Email"
                                           //ref={emailRef}
                                           value={email}
                                           onChange={e =>setEmail(e.target.value)}
                                    />
                                </fieldset>
                            </fieldset>
                            <fieldset>
                                <fieldset className='form-group'>
                                    <input type="password"
                                           className='form-control form-control-lg'
                                           placeholder="Password"
                                           value={password}
                                           onChange={e => setPassword(e.target.value)}
                                    />
                                </fieldset>
                            </fieldset>
                            <button
                                className='btn btn-lg btn-primary pull-xs-right'
                                type='submit'
                                disabled={isLoading}
                            >
                                {pageTitle}
                            </button>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    )
}


export default Authentication;